[aliases]
# https://docs.pytest.org/en/latest/goodpractices.html#integrating-with-setuptools-python-setup-py-test-pytest-runner
test=pytest
rc = egg_info --tag-date --tag-build=.rc sdist
rtm = egg_info --tag-date --tag-build=.rtm bdist
wh = egg_info sdist

[bumpversion]
current_version = 0.2.4
commit = True
tag = True

[bumpversion:file:src/django_error_views/__init__.py]
search = __version__ = '{current_version}'
replace = __version__ = '{new_version}'



[wheel]
universal = 1

[bdist_wheel]
universal = 1

[flake8]
ignore = D203
exclude =
	src/django_error_views/migrations,
	tests/test_data.py,
	tests/fixtures.py,
	.*/,
	*/.*
	docs/conf.py,
	build,
	dist
max-line-length = 200

[coverage:run]
branch = true
data_file = .tmp/.coverage

[coverage:paths]
source =
	src/django_error_views
	.tox/*/lib/python*/site-packages/django_error_views
	.tox/pypy*/site-packages/django_error_views

[coverage:report]
omit =
	*site-packages*
	*tests*
	*.tox*
	*settings/*
show_missing = True
skip_covered = True
fail_under = 30
exclude_lines =
	noqa
	pragma: no cover
	def __repr__
	if self.debug:
	if settings.DEBUG
	raise AssertionError
	raise NotImplementedError
	if 0:
	if __name__ == .__main__.:

[coverage:html]
directory = .tmp/coverage

[coverage:xml]
output = .tmp/coverage.xml

[check-manifest]
ignore-bad-ideas = *.mo

[tool:pytest]
DJANGO_SETTINGS_MODULE = tests.settings
python_files = tests.py test_*.py *_tests.py
;addopts = -n auto
;addopts = -n8
testpaths = tests src
python_classes = *Tests
django_find_project = True  # Automatically find and add a Django project to the Python path
FAIL_INVALID_TEMPLATE_VARS = True

[isort]
;known_first_party = django_error_views
known_localfolder = django_error_views,test,tests,test_data
;forced_separate = django_error_views
known_standard_library = pathlib
# This is a workaround for tox putting libraries in firstparty
default_section = THIRDPARTY
line_length = 200
not_skip = __init__.py
skip = migrations,.eggs
;skip-glob = */migrations/*
# Uncomment these is you have problems indetifying sections
;import_heading_stdlib = Standard Library
;import_heading_firstparty = My Stuff
;import_heading_thirdparty = Thirt party libraries
;import_heading_localfolder = Local

